/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TreasureFHE,
  TreasureFHEInterface,
} from "../../contracts/TreasureFHE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "euint32",
        name: "resultHandle",
        type: "bytes32",
      },
    ],
    name: "BoxOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "RewardClaimRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "rewardType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWei",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    inputs: [],
    name: "KEY_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD0_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD1_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REWARD2_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyKey",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "buyKeys",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "claimRewardCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewardRequest",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fundPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBoxPriceWei",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyKeyBalance",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyLastRewardType",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBoxesOpened",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalKeysSold",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openBox",
    outputs: [
      {
        internalType: "euint32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint32",
        name: "encPrice",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "setBoxPriceWei",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b506101646100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80515f5160206121a95f395f51905f5280546001600160a01b03199081166001600160a01b039384161790915560208301515f5160206121895f395f51905f528054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b5f80546001600160a01b0319163317815561017e906101c2565b600181905561018c906101da565b506101965f6101c2565b60028190556101a4906101da565b506101ae5f6101c2565b60038190556101bc906101da565b5061033d565b5f6101d463ffffffff831660046101e9565b92915050565b5f6101e58230610280565b5090565b5f5160206121895f395f51905f5254604051639cd07acb60e01b81525f915f5160206121a95f395f51905f52916001600160a01b0390911690639cd07acb9061023890879087906004016102f6565b6020604051808303815f875af1158015610254573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102789190610326565b949350505050565b5f5f5160206121a95f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b1580156102db575f5ffd5b505af11580156102ed573d5f5f3e3d5ffd5b50505050505050565b828152604081016054831061031957634e487b7160e01b5f52602160045260245ffd5b8260208301529392505050565b5f60208284031215610336575f5ffd5b5051919050565b611e3f8061034a5f395ff3fe608060405260043610610140575f3560e01c8063502ff8da116100bb578063c030ab2e11610071578063da1f12ab11610057578063da1f12ab14610303578063db614c9c14610317578063e95db6f91461032b575f5ffd5b8063c030ab2e146102d0578063c2e952c7146102ef575f5ffd5b80638da5cb5b116100a15780638da5cb5b14610274578063abd70aa2146102aa578063b1e32c41146102bc575f5ffd5b8063502ff8da1461025257806370f37d271461026c575f5ffd5b80632c4b3e40116101105780633425373c116100f65780633425373c1461020557806334a5b7de146102255780634be828581461023e575f5ffd5b80632c4b3e40146101d2578063302cf4e5146101f1575f5ffd5b80630a999f721461014b5780631c34e2681461016c5780632179045c1461019957806322887415146101b2575f5ffd5b3661014757005b5f5ffd5b348015610156575f5ffd5b5061016a610165366004611b08565b610333565b005b348015610177575f5ffd5b5061018666038d7ea4c6800081565b6040519081526020015b60405180910390f35b3480156101a4575f5ffd5b5061018665b5e620f4800081565b3480156101bd575f5ffd5b50335f90815260046020526040902054610186565b3480156101dd575f5ffd5b5061016a6101ec366004611b08565b610380565b3480156101fc575f5ffd5b50600154610186565b348015610210575f5ffd5b50335f90815260056020526040902054610186565b348015610230575f5ffd5b50610186655af3107a400081565b348015610249575f5ffd5b50600354610186565b34801561025d575f5ffd5b506101866601c6bf5263400081565b61016a6103e4565b34801561027f575f5ffd5b505f54610292906001600160a01b031681565b6040516001600160a01b039091168152602001610190565b3480156102b5575f5ffd5b5047610186565b3480156102c7575f5ffd5b50600254610186565b3480156102db575f5ffd5b5061016a6102ea366004611b50565b61043f565b3480156102fa575f5ffd5b506101866108a6565b34801561030e575f5ffd5b50612711610186565b348015610322575f5ffd5b50610186610b1f565b61016a610d59565b60405162461bcd60e51b815260206004820152600a60248201527f757365206275794b65790000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b5f6103c08484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610e4292505050565b600181905590506103d081610e58565b506103dd60015433610e67565b5050505050565b5f546001600160a01b0316331461043d5760405162461bcd60e51b815260206004820152600960248201527f6e6f74206f776e657200000000000000000000000000000000000000000000006044820152606401610377565b565b6104b18585858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f890181900481028201810190925287815292508791508690819084018382808284375f92019190915250610e7992505050565b5f858152600660205260409020546001600160a01b0316806105155760405162461bcd60e51b815260206004820152600f60248201527f696e76616c6964207265717565737400000000000000000000000000000000006044820152606401610377565b5f86815260076020526040902080546105705760405162461bcd60e51b815260206004820152600a60248201527f6e6f2068616e646c6573000000000000000000000000000000000000000000006044820152606401610377565b5f86868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505084549293506105b892915060209050611bdd565b8151146106075760405162461bcd60e51b815260206004820152600c60248201527f6c656e206d69736d6174636800000000000000000000000000000000000000006044820152606401610377565b5f805b835481101561080f575f6020820260200184015190505f85838154811061063357610633611bf4565b5f918252602080832090910154808352600890915260409091205490915060ff1615610660575050610807565b5f8215610697578260011461068a578260021461067d575f61069f565b66038d7ea4c6800061069f565b6601c6bf5263400061069f565b655af3107a40005b905080156107ec57804710156106f75760405162461bcd60e51b815260206004820152600860248201527f706f6f6c206c6f770000000000000000000000000000000000000000000000006044820152606401610377565b5f886001600160a01b0316826040515f6040518083038185875af1925050503d805f8114610740576040519150601f19603f3d011682016040523d82523d5f602084013e610745565b606091505b50509050806107965760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401610377565b6107a08287611c08565b6040805160ff87168152602081018590529197506001600160a01b038b16917f721da0e761006d69a1240bd9ca78df4c4cb651e29fde11b2702993c175eadd5a910160405180910390a2505b505f908152600860205260409020805460ff19166001179055505b60010161060a565b506108195f610ee2565b6001600160a01b0385165f90815260056020526040902081905561083c90610e58565b506001600160a01b0384165f9081526005602052604090205461085f9085610e67565b505f898152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191690556007909152812061089b91611a50565b505050505050505050565b5f5f6108b26001610ee2565b335f90815260046020526040812054919250906108cf9083610ef4565b335f90815260046020526040812054919250906109069083906108f29086610f22565b335f90815260046020526040902054610f50565b335f90815260046020526040902081905560035490915061093590839061092d9086610f66565b600354610f50565b6003555f610941610f94565b90505f61094f826064610f9f565b90505f610965826109606061610ee2565b610ef4565b90505f610991610979846109606055610ee2565b61098c856109876061610ee2565b610fc1565b610fef565b90505f61099d5f610ee2565b90505f6109aa6001610ee2565b90505f6109b76002610ee2565b90505f6109c5858486610f50565b90505f6109d3878484610f50565b90506109e88b826109e35f610ee2565b610f50565b335f908152600560205260408120829055909150819050610a0a60035461101d565b15610a3557335f90815260096020908152604082208054600181018255908352912001819055610a57565b335f908152600960209081526040822080546001810182559083529120018190555b335f90815260046020526040902054610a6f90610e58565b50335f81815260046020526040902054610a8891610e67565b50610a94600354610e58565b50610aa160035433610e67565b50335f90815260056020526040902054610aba90610e58565b50335f81815260056020526040902054610ad391610e67565b5060405182815233907faed7692a811c7e722225dd1a866502e669d95321040456462eecdf65ef9c6ad79060200160405180910390a2509c9b505050505050505050505050565b905090565b335f90815260096020526040812081805b8254811015610b865760085f848381548110610b4e57610b4e611bf4565b5f918252602080832090910154835282019290925260400190205460ff16610b7e5781610b7a81611c1b565b9250505b600101610b30565b505f8111610bd65760405162461bcd60e51b815260206004820152601260248201527f6e6f2070656e64696e67207265776172647300000000000000000000000000006044820152606401610377565b5f8167ffffffffffffffff811115610bf057610bf0611c33565b604051908082528060200260200182016040528015610c19578160200160208202803683370190505b5090505f805b8454811015610c94575f858281548110610c3b57610c3b611bf4565b5f918252602080832090910154808352600890915260409091205490915060ff16610c8b57808484610c6c81611c1b565b955081518110610c7e57610c7e611bf4565b6020026020010181815250505b50600101610c1f565b50610ca682636018559760e11b611027565b5f818152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191633179055600790915281209196505b8351811015610d245781848281518110610cfa57610cfa611bf4565b6020908102919091018101518254600181810185555f948552929093209092019190915501610cde565b50604051869033907feee96f2e329ccb5cc4c4441580f0438072f0728c44ccf409856cd5e3718741e8905f90a3505050505090565b65b5e620f480003414610dae5760405162461bcd60e51b815260206004820152600d60248201527f696e636f727265637420455448000000000000000000000000000000000000006044820152606401610377565b5f610db96001610ee2565b335f90815260046020526040902054909150610dd59082610f66565b335f90815260046020526040902055600254610df19082610f66565b600255335f90815260046020526040902054610e0c90610e58565b50335f81815260046020526040902054610e2591610e67565b50610e31600254610e58565b50610e3e60025433610e67565b5050565b5f610e4f83836004611033565b90505b92915050565b5f610e63823061112d565b5090565b5f610e72838361112d565b5090919050565b5f610e83846111a3565b90505f610e91828585611274565b905080610eb15760405163cf6c44e960e01b815260040160405180910390fd5b60405185907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a25050505050565b5f610e528263ffffffff16600461134d565b5f82610f0657610f035f610ee2565b92505b81610f1757610f145f610ee2565b91505b610e4f83835f6113e4565b5f82610f3457610f315f610ee2565b92505b81610f4557610f425f610ee2565b91505b610e4f83835f6114a1565b5f610f5c848484611518565b90505b9392505050565b5f82610f7857610f755f610ee2565b92505b81610f8957610f865f610ee2565b91505b610e4f83835f6115b9565b5f610b1a6004611630565b5f82610fb157610fae5f610ee2565b92505b610e4f8363ffffffff84166116bd565b5f82610fd357610fd05f610ee2565b92505b81610fe457610fe15f610ee2565b91505b610e4f83835f61171e565b5f8261100157610ffe5f611795565b92505b816110125761100f5f611795565b91505b610e4f83835f6117b0565b5f610e5282611827565b5f610e4f83835f6118a2565b5f516020611df35f395f51905f525460405163196d0b9b60e01b81525f915f516020611e135f395f51905f52916001600160a01b039091169063196d0b9b90611086908890339089908990600401611c95565b6020604051808303815f875af11580156110a2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110c69190611ccb565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b15801561110f575f5ffd5b505af1158015611121573d5f5f3e3d5ffd5b50505050509392505050565b5f5f516020611e135f395f51905f528054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015611188575f5ffd5b505af115801561119a573d5f5f3e3d5ffd5b50505050505050565b5f8181527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260408120546060917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009190036112145760405163d66ca67560e01b815260040160405180910390fd5b5f8381526001820160209081526040918290208054835181840281018401909452808452909183018282801561126757602002820191905f5260205f20905b815481526020019060010190808311611253575b5050505050915050919050565b5f5f835160206112849190611c08565b61128f906020611c08565b90505f84826040516020016112a5929190611ce2565b60405160208183030381529060405290505f6112cb5f516020611e135f395f51905f5290565b60038101546040516378542ead60e01b81529192506001600160a01b0316906378542ead90611302908a9086908a90600401611d36565b6020604051808303815f875af115801561131e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113429190611d6e565b979650505050505050565b5f516020611df35f395f51905f5254604051639cd07acb60e01b81525f915f516020611e135f395f51905f52916001600160a01b0390911690639cd07acb9061139c9087908790600401611d8d565b6020604051808303815f875af11580156113b8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113dc9190611ccb565b949350505050565b5f5f82156113f75750600160f81b6113fa565b505f5b5f516020611df35f395f51905f5254604051631391547f60e01b815260048101879052602481018690526001600160f81b0319831660448201525f516020611e135f395f51905f52916001600160a01b031690631391547f906064015b6020604051808303815f875af1158015611473573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114979190611ccb565b9695505050505050565b5f5f82156114b45750600160f81b6114b7565b505f5b5f516020611df35f395f51905f52546040516303056db360e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020611e135f395f51905f52916001600160a01b03169063182b6d9890606401611457565b5f516020611df35f395f51905f5254604051637702dcff60e01b81526004810185905260248101849052604481018390525f915f516020611e135f395f51905f52916001600160a01b0390911690637702dcff906064015b6020604051808303815f875af115801561158c573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115b09190611ccb565b95945050505050565b5f5f82156115cc5750600160f81b6115cf565b505f5b5f516020611df35f395f51905f525460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201525f516020611e135f395f51905f52916001600160a01b03169063117b2f3890606401611457565b5f516020611df35f395f51905f5254604051636baeb74560e11b81525f915f516020611e135f395f51905f52916001600160a01b039091169063d75d6e8a9061167d908690600401611da1565b6020604051808303815f875af1158015611699573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f5f9190611ccb565b5f516020611df35f395f51905f52546040516367a68c5560e11b81526004810184905260248101839052600160f81b604482018190525f9290915f516020611e135f395f51905f52916001600160a01b03169063cf4d18aa90606401611570565b5f5f82156117315750600160f81b611734565b505f5b5f516020611df35f395f51905f5254604051637210768160e01b815260048101879052602481018690526001600160f81b0319831660448201525f516020611e135f395f51905f52916001600160a01b031690637210768190606401611457565b5f610e52826117a4575f6117a7565b60015b60ff165f61134d565b5f5f82156117c35750600160f81b6117c6565b505f5b5f516020611df35f395f51905f525460405163d99882d560e01b815260048101879052602481018690526001600160f81b0319831660448201525f516020611e135f395f51905f52916001600160a01b03169063d99882d590606401611457565b5f805f516020611e135f395f51905f52805460405163c0d0294360e01b8152600481018690529192506001600160a01b03169063c0d0294390602401602060405180830381865afa15801561187e573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f5f9190611d6e565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0080545f516020611e135f395f51905f528054604051637d6e912360e11b81529293926001600160a01b039091169063fadd224690611905908990600401611daf565b5f604051808303815f87803b15801561191c575f5ffd5b505af115801561192e573d5f5f3e3d5ffd5b5050506002820154604051633263b83b60e01b81526001600160a01b039091169150633263b83b90869061196a9087908b908b90600401611dc1565b5f604051808303818588803b158015611981575f5ffd5b505af1158015611993573d5f5f3e3d5ffd5b50505050506119a283876119bd565b8154825f6119af83611c1b565b919050555050509392505050565b5f8281527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260409020547f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf009015611a2a57604051633f06d22b60e01b815260040160405180910390fd5b5f83815260018201602090815260409091208351611a4a92850190611a6e565b50505050565b5080545f8255905f5260205f2090810190611a6b9190611aaf565b50565b828054828255905f5260205f20908101928215611aa7579160200282015b82811115611aa7578251825591602001919060010190611a8c565b50610e639291505b5b80821115610e63575f8155600101611ab0565b5f5f83601f840112611ad3575f5ffd5b50813567ffffffffffffffff811115611aea575f5ffd5b602083019150836020828501011115611b01575f5ffd5b9250929050565b5f5f5f60408486031215611b1a575f5ffd5b83359250602084013567ffffffffffffffff811115611b37575f5ffd5b611b4386828701611ac3565b9497909650939450505050565b5f5f5f5f5f60608688031215611b64575f5ffd5b85359450602086013567ffffffffffffffff811115611b81575f5ffd5b611b8d88828901611ac3565b909550935050604086013567ffffffffffffffff811115611bac575f5ffd5b611bb888828901611ac3565b969995985093965092949392505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610e5257610e52611bc9565b634e487b7160e01b5f52603260045260245ffd5b80820180821115610e5257610e52611bc9565b5f60018201611c2c57611c2c611bc9565b5060010190565b634e487b7160e01b5f52604160045260245ffd5b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60548110611c9157634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611cbc6080830185611c47565b90506115b06060830184611c75565b5f60208284031215611cdb575f5ffd5b5051919050565b5f83518060208601845e9190910191825250602001919050565b5f8151808452602084019350602083015f5b82811015611d2c578151865260209586019590910190600101611d0e565b5093949350505050565b606081525f611d486060830186611cfc565b8281036020840152611d5a8186611c47565b905082810360408401526114978185611c47565b5f60208284031215611d7e575f5ffd5b81518015158114610f5f575f5ffd5b82815260408101610f5f6020830184611c75565b60208101610e528284611c75565b602081525f610e4f6020830184611cfc565b838152606060208201525f611dd96060830185611cfc565b905063ffffffff60e01b8316604083015294935050505056fe9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497019e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700a164736f6c634300081b000a9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497019e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700";

type TreasureFHEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureFHEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureFHE__factory extends ContractFactory {
  constructor(...args: TreasureFHEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TreasureFHE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TreasureFHE__factory {
    return super.connect(runner) as TreasureFHE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureFHEInterface {
    return new Interface(_abi) as TreasureFHEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TreasureFHE {
    return new Contract(address, _abi, runner) as unknown as TreasureFHE;
  }
}
